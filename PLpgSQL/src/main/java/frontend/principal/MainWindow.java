package frontend.principal;

import backend.utils.Data;
import frontend.reports.LexicalReportPanel;
import frontend.reports.SemanticReportPanel;
import frontend.reports.SyntaxReportPanel;
import frontend.tabs.TabPanel;
import java.awt.BorderLayout;
import java.awt.Component;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author michael
 */
public class MainWindow extends javax.swing.JFrame {

    private final static String TITLE = "Intérprete PL/pgSQL";
    private LexicalReportPanel lexicalReport = new LexicalReportPanel();
    private SyntaxReportPanel syntaxReport = new SyntaxReportPanel();
    private SemanticReportPanel semanticReport = new SemanticReportPanel();
    private TabPanel tabbedPane = new TabPanel();

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        this.setTitle(TITLE);
        initComponents();
        principalTabbed();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        containerPanel = new javax.swing.JPanel();
        menuBar = new javax.swing.JMenuBar();
        archiveBtn = new javax.swing.JMenu();
        openArchiveBtn = new javax.swing.JMenuItem();
        newProjectBtn = new javax.swing.JMenuItem();
        saveArchiveBtn = new javax.swing.JMenuItem();
        editorBtn = new javax.swing.JMenu();
        viewScriptsBtn = new javax.swing.JMenuItem();
        newTabBtn = new javax.swing.JMenuItem();
        tablesBtn = new javax.swing.JMenu();
        tablesTypesBtn = new javax.swing.JMenuItem();
        symbolsTableBtn = new javax.swing.JMenuItem();
        reportsBtn = new javax.swing.JMenu();
        lexicalErrorsBtn = new javax.swing.JMenuItem();
        syntacticalErrorsBtn = new javax.swing.JMenuItem();
        semanticErrorsBtn = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(650, 470));

        containerPanel.setBackground(new java.awt.Color(255, 204, 51));
        containerPanel.setRequestFocusEnabled(false);
        containerPanel.setLayout(new java.awt.BorderLayout());

        archiveBtn.setText("Archivo");

        openArchiveBtn.setText("Abrir");
        openArchiveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openArchiveBtnActionPerformed(evt);
            }
        });
        archiveBtn.add(openArchiveBtn);

        newProjectBtn.setText("Nuevo");
        newProjectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newProjectBtnActionPerformed(evt);
            }
        });
        archiveBtn.add(newProjectBtn);

        saveArchiveBtn.setText("Guardar");
        saveArchiveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveArchiveBtnActionPerformed(evt);
            }
        });
        archiveBtn.add(saveArchiveBtn);

        menuBar.add(archiveBtn);

        editorBtn.setText("Editor");

        viewScriptsBtn.setText("Ver scripts");
        viewScriptsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewScriptsBtnActionPerformed(evt);
            }
        });
        editorBtn.add(viewScriptsBtn);

        newTabBtn.setText("Nueva pestaña");
        newTabBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTabBtnActionPerformed(evt);
            }
        });
        editorBtn.add(newTabBtn);

        menuBar.add(editorBtn);

        tablesBtn.setText("Tablas");

        tablesTypesBtn.setText("Tabla de tipos");
        tablesTypesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tablesTypesBtnActionPerformed(evt);
            }
        });
        tablesBtn.add(tablesTypesBtn);

        symbolsTableBtn.setText("Tabla de símbolos");
        symbolsTableBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                symbolsTableBtnActionPerformed(evt);
            }
        });
        tablesBtn.add(symbolsTableBtn);

        menuBar.add(tablesBtn);

        reportsBtn.setText("Reportes");

        lexicalErrorsBtn.setText("Errores léxicos");
        lexicalErrorsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lexicalErrorsBtnActionPerformed(evt);
            }
        });
        reportsBtn.add(lexicalErrorsBtn);

        syntacticalErrorsBtn.setText("Errores sintácticos");
        syntacticalErrorsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                syntacticalErrorsBtnActionPerformed(evt);
            }
        });
        reportsBtn.add(syntacticalErrorsBtn);

        semanticErrorsBtn.setText("Errores semánticos");
        semanticErrorsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semanticErrorsBtnActionPerformed(evt);
            }
        });
        reportsBtn.add(semanticErrorsBtn);

        menuBar.add(reportsBtn);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 868, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 686, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openArchiveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openArchiveBtnActionPerformed
        //LeerArchivoTexto miArchivo = new LeerArchivoTexto();
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.YML", "yml");
        chooser.setFileFilter(filter);
        int selection = chooser.showOpenDialog(this);

        if (selection == JFileChooser.APPROVE_OPTION) {
            String nameArchive = chooser.getSelectedFile().getName();
            String extension = nameArchive.substring(nameArchive.lastIndexOf('.') + 1).toLowerCase();

            if (extension.equals("yml")) {
                /*String textoLeido = miArchivo.abrirArchivo(chooser.getSelectedFile().getAbsolutePath());
                this.pintarPanel(editor);
                editor.setAreaEditor(textoLeido);*/
            } else {
                JOptionPane.showMessageDialog(this, "Solo se permiten archivos .yml", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_openArchiveBtnActionPerformed

    private void saveArchiveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveArchiveBtnActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos YML (*.yml)", "yml");
        chooser.setFileFilter(filter);
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

        int selection = chooser.showSaveDialog(this);

        if (selection == JFileChooser.APPROVE_OPTION) {
            File archive = chooser.getSelectedFile();
            File path = chooser.getCurrentDirectory();

            String name = archive.getName();

            if (!name.toLowerCase().endsWith(".yml")) {
                name += ".yml";
                archive = new File(path, name);
            }

            Data data = new Data();
            data.writeYML("texto", name, path);

            JOptionPane.showMessageDialog(this, "Archivo guardado en: " + archive.getAbsolutePath());
        }

    }//GEN-LAST:event_saveArchiveBtnActionPerformed

    private void tablesTypesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tablesTypesBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tablesTypesBtnActionPerformed

    private void symbolsTableBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_symbolsTableBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_symbolsTableBtnActionPerformed

    private void lexicalErrorsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lexicalErrorsBtnActionPerformed
        this.setTitle(TITLE + " - Errores Léxicos");
        this.paintPanel(lexicalReport);
    }//GEN-LAST:event_lexicalErrorsBtnActionPerformed

    private void syntacticalErrorsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_syntacticalErrorsBtnActionPerformed
        this.setTitle(TITLE + " - Errores Sintácticos");
        this.paintPanel(syntaxReport);
    }//GEN-LAST:event_syntacticalErrorsBtnActionPerformed

    private void semanticErrorsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semanticErrorsBtnActionPerformed
        this.setTitle(TITLE + " - Errores Semánticos");
        this.paintPanel(semanticReport);
    }//GEN-LAST:event_semanticErrorsBtnActionPerformed

    private void newProjectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProjectBtnActionPerformed

    }//GEN-LAST:event_newProjectBtnActionPerformed

    private void viewScriptsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewScriptsBtnActionPerformed
        this.setTitle(TITLE);
        paintPanel(tabbedPane);
    }//GEN-LAST:event_viewScriptsBtnActionPerformed

    private void newTabBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTabBtnActionPerformed
        String tabName = JOptionPane.showInputDialog(this, "Nombre de la pestaña:", "Pestaña nueva", JOptionPane.INFORMATION_MESSAGE);
        tabbedPane.addNewTab(tabName);
    }//GEN-LAST:event_newTabBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu archiveBtn;
    private javax.swing.JPanel containerPanel;
    private javax.swing.JMenu editorBtn;
    private javax.swing.JMenuItem lexicalErrorsBtn;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem newProjectBtn;
    private javax.swing.JMenuItem newTabBtn;
    private javax.swing.JMenuItem openArchiveBtn;
    private javax.swing.JMenu reportsBtn;
    private javax.swing.JMenuItem saveArchiveBtn;
    private javax.swing.JMenuItem semanticErrorsBtn;
    private javax.swing.JMenuItem symbolsTableBtn;
    private javax.swing.JMenuItem syntacticalErrorsBtn;
    private javax.swing.JMenu tablesBtn;
    private javax.swing.JMenuItem tablesTypesBtn;
    private javax.swing.JMenuItem viewScriptsBtn;
    // End of variables declaration//GEN-END:variables

    private void paintPanel(Component panel) {
        containerPanel.removeAll();
        containerPanel.setLayout(new BorderLayout());
        containerPanel.add(panel, BorderLayout.CENTER);
        containerPanel.revalidate();
        containerPanel.repaint();
    }

    private void principalTabbed() {
        tabbedPane.addNewTab("Pestaña 1");
        this.paintPanel(tabbedPane);
    }
}
