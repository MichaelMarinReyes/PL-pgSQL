package frontend.principal;

import backend.utils.Data;
import frontend.reports.LexicalReportPanel;
import frontend.tabs.TabPane;
import java.awt.BorderLayout;
import java.awt.Component;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;
import javax.swing.JTextArea;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;

/**
 *
 * @author michael
 */
public class MainWindow extends javax.swing.JFrame {

    private LexicalReportPanel lexicalReport = new LexicalReportPanel();
    private TabPane tabbedPane = new TabPane();

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        this.setTitle("Intérprete PL/pgSQL");
        initComponents();
        docsTree.setModel(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filesMenuPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        docsTree = new javax.swing.JTree();
        containerPanel = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        archiveBtn = new javax.swing.JMenu();
        openArchiveBtn = new javax.swing.JMenuItem();
        newProjectBtn = new javax.swing.JMenuItem();
        saveArchiveBtn = new javax.swing.JMenuItem();
        newTabBtn = new javax.swing.JMenu();
        tablesBtn = new javax.swing.JMenu();
        tablesTypesBtn = new javax.swing.JMenuItem();
        symbolsTableBtn = new javax.swing.JMenuItem();
        reportsBtn = new javax.swing.JMenu();
        lexicalErrorsBtn = new javax.swing.JMenuItem();
        syntacticalErrorsBtn = new javax.swing.JMenuItem();
        semanticErrorsBtn = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(650, 470));

        filesMenuPanel.setBackground(new java.awt.Color(204, 204, 204));
        filesMenuPanel.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setViewportView(docsTree);

        filesMenuPanel.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        containerPanel.setBackground(new java.awt.Color(255, 204, 51));

        javax.swing.GroupLayout containerPanelLayout = new javax.swing.GroupLayout(containerPanel);
        containerPanel.setLayout(containerPanelLayout);
        containerPanelLayout.setHorizontalGroup(
            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 797, Short.MAX_VALUE)
        );
        containerPanelLayout.setVerticalGroup(
            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 684, Short.MAX_VALUE)
        );

        archiveBtn.setText("Archivo");

        openArchiveBtn.setText("Abrir");
        openArchiveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openArchiveBtnActionPerformed(evt);
            }
        });
        archiveBtn.add(openArchiveBtn);

        newProjectBtn.setText("Nuevo");
        newProjectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newProjectBtnActionPerformed(evt);
            }
        });
        archiveBtn.add(newProjectBtn);

        saveArchiveBtn.setText("Guardar");
        saveArchiveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveArchiveBtnActionPerformed(evt);
            }
        });
        archiveBtn.add(saveArchiveBtn);

        jMenuBar1.add(archiveBtn);

        newTabBtn.setText("Nueva pestaña");
        newTabBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newTabBtnMouseClicked(evt);
            }
        });
        jMenuBar1.add(newTabBtn);

        tablesBtn.setText("Tablas");

        tablesTypesBtn.setText("Tabla de tipos");
        tablesTypesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tablesTypesBtnActionPerformed(evt);
            }
        });
        tablesBtn.add(tablesTypesBtn);

        symbolsTableBtn.setText("Tabla de símbolos");
        symbolsTableBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                symbolsTableBtnActionPerformed(evt);
            }
        });
        tablesBtn.add(symbolsTableBtn);

        jMenuBar1.add(tablesBtn);

        reportsBtn.setText("Reportes");

        lexicalErrorsBtn.setText("Errores léxicos");
        lexicalErrorsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lexicalErrorsBtnActionPerformed(evt);
            }
        });
        reportsBtn.add(lexicalErrorsBtn);

        syntacticalErrorsBtn.setText("Errores sintácticos");
        syntacticalErrorsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                syntacticalErrorsBtnActionPerformed(evt);
            }
        });
        reportsBtn.add(syntacticalErrorsBtn);

        semanticErrorsBtn.setText("Errores semánticos");
        semanticErrorsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semanticErrorsBtnActionPerformed(evt);
            }
        });
        reportsBtn.add(semanticErrorsBtn);

        jMenuBar1.add(reportsBtn);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(filesMenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(6, 6, 6)
                .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(filesMenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openArchiveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openArchiveBtnActionPerformed
        //LeerArchivoTexto miArchivo = new LeerArchivoTexto();
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.YML", "yml");
        chooser.setFileFilter(filter);
        int selection = chooser.showOpenDialog(this);

        if (selection == JFileChooser.APPROVE_OPTION) {
            String nameArchive = chooser.getSelectedFile().getName();
            String extension = nameArchive.substring(nameArchive.lastIndexOf('.') + 1).toLowerCase();

            if (extension.equals("yml")) {
                /*String textoLeido = miArchivo.abrirArchivo(chooser.getSelectedFile().getAbsolutePath());
                this.pintarPanel(editor);
                editor.setAreaEditor(textoLeido);*/
            } else {
                JOptionPane.showMessageDialog(this, "Solo se permiten archivos .yml", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_openArchiveBtnActionPerformed

    private void saveArchiveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveArchiveBtnActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.YML", "yml");
        chooser.setFileFilter(filter);
        int selection = chooser.showSaveDialog(this);
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);

        if (selection == JFileChooser.APPROVE_OPTION) {
            File archive = chooser.getSelectedFile();
            File path = chooser.getCurrentDirectory();

            String name = chooser.getSelectedFile().getName();
            Data data = new Data();
            data.writeYML("texto", name, path);

        }
    }//GEN-LAST:event_saveArchiveBtnActionPerformed

    private void tablesTypesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tablesTypesBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tablesTypesBtnActionPerformed

    private void symbolsTableBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_symbolsTableBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_symbolsTableBtnActionPerformed

    private void lexicalErrorsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lexicalErrorsBtnActionPerformed
        this.paintPanel(lexicalReport);
    }//GEN-LAST:event_lexicalErrorsBtnActionPerformed

    private void syntacticalErrorsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_syntacticalErrorsBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_syntacticalErrorsBtnActionPerformed

    private void semanticErrorsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semanticErrorsBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_semanticErrorsBtnActionPerformed

    private void newProjectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProjectBtnActionPerformed
        String projectName = JOptionPane.showInputDialog(this, "Ingrese el nombre del proyecto", "Nuevo proyecto", JOptionPane.PLAIN_MESSAGE);

        if (projectName != null && !projectName.trim().isEmpty()) {
            DefaultMutableTreeNode root = new DefaultMutableTreeNode(projectName);
            DefaultTreeModel model = new DefaultTreeModel(root);
            docsTree.setModel(model);

            docsTree.addTreeSelectionListener(e -> {
                TreePath path = e.getPath();
                if (path == null) {
                    return;
                }

                DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) path.getLastPathComponent();

                if (selectedNode.getParent() != null) { // significa que es un archivo
                    String fileName = selectedNode.toString();

                    // Verificar si ya está abierto
                    for (int i = 0; i < tabbedPane.getTabCount(); i++) {
                        if (tabbedPane.getTitleAt(i).equals(fileName)) {
                            tabbedPane.setSelectedIndex(i);
                            return;
                        }
                    }

                    // Crear panel con editor + consola
                    JSplitPane splitPane = new JSplitPane(JSplitPane.VERTICAL_SPLIT);
                    JTextArea editor = new JTextArea();
                    JTextArea console = new JTextArea();
                    console.setEditable(false);

                    splitPane.setTopComponent(new JScrollPane(editor));
                    splitPane.setBottomComponent(new JScrollPane(console));
                    splitPane.setDividerLocation(300);

                    tabbedPane.addTab(fileName, splitPane);
                    tabbedPane.setSelectedComponent(splitPane);
                }
            });

        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar un nombre válido", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_newProjectBtnActionPerformed

    private void newTabBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newTabBtnMouseClicked
        TreePath selectedPath = docsTree.getSelectionPath();

        if (selectedPath == null) {
            JOptionPane.showMessageDialog(this, "Selecciona un proyecto antes de crear una pestaña", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) selectedPath.getLastPathComponent();

        if (selectedNode.getParent() == null) {
            String tabName = JOptionPane.showInputDialog(this, "Nombre de la pestaña:");
            if (tabName == null || tabName.trim().isEmpty()) {
                return;
            }
            JTextArea editor = new JTextArea();
            JScrollPane scroll = new JScrollPane(editor);

            tabbedPane.addTab(tabName, scroll);
            tabbedPane.setSelectedComponent(scroll);

            DefaultMutableTreeNode newFileNode = new DefaultMutableTreeNode(tabName);
            selectedNode.add(newFileNode);

            DefaultTreeModel model = (DefaultTreeModel) docsTree.getModel();
            model.reload(selectedNode);
            paintPanel(tabbedPane);
        } else {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un proyecto.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_newTabBtnMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu archiveBtn;
    private javax.swing.JPanel containerPanel;
    private javax.swing.JTree docsTree;
    private javax.swing.JPanel filesMenuPanel;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem lexicalErrorsBtn;
    private javax.swing.JMenuItem newProjectBtn;
    private javax.swing.JMenu newTabBtn;
    private javax.swing.JMenuItem openArchiveBtn;
    private javax.swing.JMenu reportsBtn;
    private javax.swing.JMenuItem saveArchiveBtn;
    private javax.swing.JMenuItem semanticErrorsBtn;
    private javax.swing.JMenuItem symbolsTableBtn;
    private javax.swing.JMenuItem syntacticalErrorsBtn;
    private javax.swing.JMenu tablesBtn;
    private javax.swing.JMenuItem tablesTypesBtn;
    // End of variables declaration//GEN-END:variables

    private void paintPanel(Component panel) {
        containerPanel.removeAll();
        containerPanel.setLayout(new BorderLayout());
        containerPanel.add(panel, BorderLayout.CENTER);
        containerPanel.revalidate();
        containerPanel.repaint();
    }
}
