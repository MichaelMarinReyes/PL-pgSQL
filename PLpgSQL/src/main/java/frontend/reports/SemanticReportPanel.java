package frontend.reports;

import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author michael
 */
public class SemanticReportPanel extends javax.swing.JPanel {

    /**
     * Creates new form SemanticReportPanel
     */
    public SemanticReportPanel() {
        initComponents();
        updateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        semanticErrorTable = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        semanticErrorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(semanticErrorTable);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable semanticErrorTable;
    // End of variables declaration//GEN-END:variables

        private void updateTable() {
        String[] columns = {"No.", "Lexema", "Línea", "Columna", "Descripción", "Tipo"};
        DefaultTableModel model = new DefaultTableModel(columns, 0);
        semanticErrorTable.setModel(model);
        
        DefaultTableCellRenderer renderTable = new DefaultTableCellRenderer();
        renderTable.setHorizontalAlignment(SwingConstants.CENTER);
        /*
        for (int i = 0; i < lexerErrors.size(); i++) {
            LexicalError lexicalError = lexerErrors.get(i);
            Object[] row = {
                String.valueOf((i+1)),
                lexicalError.getLexeme(),
                lexicalError.getLine(),
                lexicalError.getColumn(),
                lexicalError.getDescription(),
                lexicalError.getType()
            };
        }*/
    }

}
